"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/components/chat/messages/RenderTextMessage.tsx
var RenderTextMessage_exports = {};
__export(RenderTextMessage_exports, {
  RenderTextMessage: () => RenderTextMessage
});
module.exports = __toCommonJS(RenderTextMessage_exports);
var import_jsx_runtime = require("react/jsx-runtime");
function RenderTextMessage(props) {
  const {
    message,
    inProgress,
    index,
    isCurrentMessage,
    UserMessage,
    AssistantMessage,
    onRegenerate,
    onCopy,
    onThumbsUp,
    onThumbsDown
  } = props;
  if (message.isTextMessage()) {
    if (message.role === "user") {
      return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        UserMessage,
        {
          "data-message-role": "user",
          message: message.content,
          rawData: message
        },
        index
      );
    } else if (message.role == "assistant") {
      return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        AssistantMessage,
        {
          "data-message-role": "assistant",
          message: message.content,
          rawData: message,
          isLoading: inProgress && isCurrentMessage && !message.content,
          isGenerating: inProgress && isCurrentMessage && !!message.content,
          isCurrentMessage,
          onRegenerate,
          onCopy,
          onThumbsUp,
          onThumbsDown
        },
        index
      );
    }
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  RenderTextMessage
});
//# sourceMappingURL=RenderTextMessage.js.map